version: '3'

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic

  postgres:
    container_name: database
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 12345678x@X
      PGDATA: /data/postgres
    volumes:
      - $PWD/pg:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "bangnnse140937@fpt.edu.vn"
      PGADMIN_DEFAULT_PASSWORD: 12345678x@X
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    restart: unless-stopped
  mysql-keycloak:
    container_name: keycloak-database
    image: mysql:5.7
    volumes:
      - mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
  redis:
    container_name: redis_cache
    image: "redis:alpine"
    command: redis-server --requirepass 12345678x@X
    ports:
      - "6380:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.nginx.conf:/usr/local/etc/redis/redis.nginx.conf
    environment:
      - REDIS_REPLICATION_MODE=master
  phpmyadmin:
    container_name: phpmyadmin-lms
    image: phpmyadmin
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
  phpmyadmin-keycloak:
    image: phpmyadmin
    ports:
      - "4444:80"
    environment:
      - PMA_ARBITRARY=1
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:16.1.0
    command: -b 0.0.0.0 -Dkeycloak.profile=preview
    restart: on-failure
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: MYSQL
      DB_ADDR: mysql-keycloak
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: 12345678x@X
      REDIRECT_SOCKET: "proxy-https"
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    ports:
      - "9090:8080"
    depends_on:
      - mysql-keycloak
  nginx:
    image: nginx
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - /usr/local/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"

networks:
  elastic:
    driver: bridge

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  mysql_data:
    driver: local
  mysql_keycloak_data:
    driver: local
